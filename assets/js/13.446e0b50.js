(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{401:function(t,v,e){"use strict";e.r(v);var _=e(15),a=Object(_.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"依赖注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入"}},[t._v("#")]),t._v(" 依赖注入")]),t._v(" "),e("h2",{attrs:{id:"一、依赖注入模式和类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、依赖注入模式和类型"}},[t._v("#")]),t._v(" 一、依赖注入模式和类型")]),t._v(" "),e("h3",{attrs:{id:"依赖注入模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入模式"}},[t._v("#")]),t._v(" 依赖注入模式")]),t._v(" "),e("p",[t._v("依赖注入模式可以分为手动模式和自动模式")]),t._v(" "),e("h4",{attrs:{id:"手动注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手动注入"}},[t._v("#")]),t._v(" 手动注入")]),t._v(" "),e("p",[t._v("配置或者编程的方式，提前安排注入规则")]),t._v(" "),e("ul",[e("li",[t._v("XML 资源配置元信息")]),t._v(" "),e("li",[t._v("Java 注解配置元信息")]),t._v(" "),e("li",[t._v("API 配置元信息")])]),t._v(" "),e("h4",{attrs:{id:"自动注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动注入"}},[t._v("#")]),t._v(" 自动注入")]),t._v(" "),e("p",[t._v("实现方提供依赖自动关联的方式，按照內建的注入规则（官方不推荐）")]),t._v(" "),e("ul",[e("li",[t._v("Autowiring（自动绑定）")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("模式")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("no")]),t._v(" "),e("td",[t._v("默认值，未激活 Autowiring，需要手动指定依赖注入对象。")])]),t._v(" "),e("tr",[e("td",[t._v("byName")]),t._v(" "),e("td",[t._v("根据被注入属性的名称作为 Bean 名称进行依赖查找，并将对象设置到该属性。")])]),t._v(" "),e("tr",[e("td",[t._v("byType")]),t._v(" "),e("td",[t._v("根据被注入属性的类型作为依赖类型进行查找，并将对象设置到该属性。")])]),t._v(" "),e("tr",[e("td",[t._v("constructor")]),t._v(" "),e("td",[t._v("特殊 byType 类型，用于构造器参数。")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("限制和不足参考："),e("a",{attrs:{href:"https://docs.spring.io/spring/docs/5.2.2.RELEASE/spring-frameworkreference/core.html#beans-autowired-exceptions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Limitations and Disadvantages of Autowiring 小节"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"依赖注入类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入类型"}},[t._v("#")]),t._v(" 依赖注入类型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("依赖注入类型")]),t._v(" "),e("th",[t._v("配置元数据举例")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Setter 方法")]),t._v(" "),e("td",[e("code",[t._v('<proeprty name="user" ref="userBean"/>')])])]),t._v(" "),e("tr",[e("td",[t._v("构造器")]),t._v(" "),e("td",[e("code",[t._v('<constructor-arg name="user" ref="userBean" />')])])]),t._v(" "),e("tr",[e("td",[t._v("字段")]),t._v(" "),e("td",[e("code",[t._v("@Autowired User user;")])])]),t._v(" "),e("tr",[e("td",[t._v("方法")]),t._v(" "),e("td",[e("code",[t._v("@Autowired public void user(User user) { ... }")])])]),t._v(" "),e("tr",[e("td",[t._v("接口回调")]),t._v(" "),e("td",[e("code",[t._v("class MyBean implements BeanFactoryAware { ... }")])])])])]),t._v(" "),e("h4",{attrs:{id:"setter-方法注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setter-方法注入"}},[t._v("#")]),t._v(" Setter 方法注入")]),t._v(" "),e("p",[t._v("手动模式")]),t._v(" "),e("ul",[e("li",[t._v("XML 资源配置元信息")]),t._v(" "),e("li",[t._v("Java 注解配置元信息")]),t._v(" "),e("li",[t._v("API 配置元信息")])]),t._v(" "),e("p",[t._v("自动模式")]),t._v(" "),e("ul",[e("li",[t._v("byName")]),t._v(" "),e("li",[t._v("byType")])]),t._v(" "),e("h4",{attrs:{id:"构造器注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构造器注入"}},[t._v("#")]),t._v(" 构造器注入")]),t._v(" "),e("p",[t._v("手动模式")]),t._v(" "),e("ul",[e("li",[t._v("XML 资源配置元信息")]),t._v(" "),e("li",[t._v("Java 注解配置元信息")]),t._v(" "),e("li",[t._v("API 配置元信息")])]),t._v(" "),e("p",[t._v("自动模式")]),t._v(" "),e("ul",[e("li",[t._v("constructor")])]),t._v(" "),e("h4",{attrs:{id:"字段注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字段注入"}},[t._v("#")]),t._v(" 字段注入")]),t._v(" "),e("p",[t._v("手动模式（Java 注解配置元信息）")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("@Autowired")])]),t._v(" "),e("li",[e("code",[t._v("@Resource")])]),t._v(" "),e("li",[e("code",[t._v("@Inject")]),t._v("（可选）")])]),t._v(" "),e("h4",{attrs:{id:"方法注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法注入"}},[t._v("#")]),t._v(" 方法注入")]),t._v(" "),e("p",[t._v("手动模式（Java 注解配置元信息）")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("@Autowired")])]),t._v(" "),e("li",[e("code",[t._v("@Resource")])]),t._v(" "),e("li",[e("code",[t._v("@Inject")]),t._v("（可选）")]),t._v(" "),e("li",[e("code",[t._v("@Bean")])])]),t._v(" "),e("h4",{attrs:{id:"接口回调注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#接口回调注入"}},[t._v("#")]),t._v(" 接口回调注入")]),t._v(" "),e("p",[t._v("Aware 系列接口回调")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("內建接口")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("BeanFactoryAware")])]),t._v(" "),e("td",[t._v("获取 IoC 容器- "),e("code",[t._v("BeanFactory")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("ApplicationContextAware")])]),t._v(" "),e("td",[t._v("获取 Spring 应用上下文- "),e("code",[t._v("ApplicationContext")]),t._v(" 对象")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("EnvironmentAware")])]),t._v(" "),e("td",[t._v("获取 "),e("code",[t._v("Environment")]),t._v(" 对象")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("ResourceLoaderAware")])]),t._v(" "),e("td",[t._v("获取资源加载器对象- "),e("code",[t._v("ResourceLoader")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("BeanClassLoaderAware")])]),t._v(" "),e("td",[t._v("获取加载当前 Bean Class 的 "),e("code",[t._v("ClassLoader")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("BeanNameAware")])]),t._v(" "),e("td",[t._v("获取当前 Bean 的名称")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("MessageSourceAware")])]),t._v(" "),e("td",[t._v("获取 "),e("code",[t._v("MessageSource")]),t._v(" 对象，用于 Spring 国际化")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("ApplicationEventPublisherAware")])]),t._v(" "),e("td",[t._v("获取 "),e("code",[t._v("ApplicationEventPublishAware")]),t._v(" 对象，用于 Spring 事件")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("EmbeddedValueResolverAware")])]),t._v(" "),e("td",[t._v("获取 "),e("code",[t._v("StringValueResolver")]),t._v(" 对象，用于占位符处理")])])])]),t._v(" "),e("h4",{attrs:{id:"依赖注入类型选择"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入类型选择"}},[t._v("#")]),t._v(" 依赖注入类型选择")]),t._v(" "),e("ul",[e("li",[t._v("低依赖：构造器注入")]),t._v(" "),e("li",[t._v("多依赖：Setter 方法注入")]),t._v(" "),e("li",[t._v("便利性：字段注入")]),t._v(" "),e("li",[t._v("声明类：方法注入")])]),t._v(" "),e("h2",{attrs:{id:"自动绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动绑定"}},[t._v("#")]),t._v(" 自动绑定")]),t._v(" "),e("h2",{attrs:{id:"二、被注入的数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、被注入的数据类型"}},[t._v("#")]),t._v(" 二、被注入的数据类型")]),t._v(" "),e("p",[t._v("基础类型")]),t._v(" "),e("ul",[e("li",[t._v("原生类型（Primitive）：boolean、byte、char、short、int、float、long、double")]),t._v(" "),e("li",[t._v("标量类型（Scalar）：Number、Character、Boolean、Enum、Locale、Charset、Currency、Properties、UUID")]),t._v(" "),e("li",[t._v("常规类型（General）：Object、String、TimeZone、Calendar、Optional 等")]),t._v(" "),e("li",[t._v("Spring 类型：Resource、InputSource、Formatter 等")])]),t._v(" "),e("p",[t._v("集合类型")]),t._v(" "),e("ul",[e("li",[t._v("数组类型（Array）：原生类型、标量类型、常规类型、Spring 类型")]),t._v(" "),e("li",[t._v("集合类型（Collection）\n"),e("ul",[e("li",[t._v("Collection：List、Set（SortedSet、NavigableSet、EnumSet）")]),t._v(" "),e("li",[t._v("Map：Properties")])])])]),t._v(" "),e("h2",{attrs:{id:"三、依赖注入辅助功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、依赖注入辅助功能"}},[t._v("#")]),t._v(" 三、依赖注入辅助功能")]),t._v(" "),e("h3",{attrs:{id:"限定注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#限定注入"}},[t._v("#")]),t._v(" 限定注入")]),t._v(" "),e("p",[t._v("使用注解@Qualifier 限定")]),t._v(" "),e("ul",[e("li",[t._v("通过 Bean 名称限定")]),t._v(" "),e("li",[t._v("通过分组限定")])]),t._v(" "),e("p",[t._v("基于注解@Qualifier 扩展限定")]),t._v(" "),e("ul",[e("li",[t._v("自定义注解- 如 Spring Cloud @LoadBalanced")])]),t._v(" "),e("h3",{attrs:{id:"延迟依赖注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延迟依赖注入"}},[t._v("#")]),t._v(" 延迟依赖注入")]),t._v(" "),e("p",[t._v("使用 API ObjectFactory 延迟注入")]),t._v(" "),e("ul",[e("li",[t._v("单一类型")]),t._v(" "),e("li",[t._v("集合类型")])]),t._v(" "),e("p",[t._v("使用 API ObjectProvider 延迟注入（推荐）")]),t._v(" "),e("ul",[e("li",[t._v("单一类型")]),t._v(" "),e("li",[t._v("集合类型")])]),t._v(" "),e("h2",{attrs:{id:"四、-autowired-和-inject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、-autowired-和-inject"}},[t._v("#")]),t._v(" 四、@Autowired 和 @Inject")]),t._v(" "),e("h3",{attrs:{id:"autowired-注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#autowired-注入"}},[t._v("#")]),t._v(" @Autowired 注入")]),t._v(" "),e("p",[t._v("@Autowired 注入过程")]),t._v(" "),e("ul",[e("li",[t._v("元信息解析")]),t._v(" "),e("li",[t._v("依赖查找")]),t._v(" "),e("li",[t._v("依赖注入（字段、方法）")])]),t._v(" "),e("h3",{attrs:{id:"inject-注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inject-注入"}},[t._v("#")]),t._v(" @Inject 注入")]),t._v(" "),e("p",[t._v("@Inject 注入过程")]),t._v(" "),e("p",[t._v("如果 JSR-330 存在于 ClassPath 中，复用 AutowiredAnnotationBeanPostProcessor 实现")]),t._v(" "),e("h2",{attrs:{id:"四、依赖处理过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、依赖处理过程"}},[t._v("#")]),t._v(" 四、依赖处理过程")]),t._v(" "),e("ul",[e("li",[t._v("入口- DefaultListableBeanFactory#resolveDependency")]),t._v(" "),e("li",[t._v("依赖描述符- DependencyDescriptor")]),t._v(" "),e("li",[t._v("自定绑定候选对象处理器- AutowireCandidateResolver")])]),t._v(" "),e("h2",{attrs:{id:"java-通用注解注入原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-通用注解注入原理"}},[t._v("#")]),t._v(" Java 通用注解注入原理")]),t._v(" "),e("p",[t._v("CommonAnnotationBeanPostProcessor")]),t._v(" "),e("p",[t._v("注入注解")]),t._v(" "),e("ul",[e("li",[t._v("javax.xml.ws.WebServiceRef")]),t._v(" "),e("li",[t._v("javax.ejb.EJB")]),t._v(" "),e("li",[t._v("javax.annotation.Resource")])]),t._v(" "),e("p",[t._v("生命周期注解")]),t._v(" "),e("ul",[e("li",[t._v("javax.annotation.PostConstruct")]),t._v(" "),e("li",[t._v("javax.annotation.PreDestroy")])]),t._v(" "),e("h2",{attrs:{id:"自定义依赖注入注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义依赖注入注解"}},[t._v("#")]),t._v(" 自定义依赖注入注解")]),t._v(" "),e("p",[t._v("基于 AutowiredAnnotationBeanPostProcessor 实现")]),t._v(" "),e("p",[t._v("生命周期处理")]),t._v(" "),e("ul",[e("li",[t._v("InstantiationAwareBeanPostProcessor")]),t._v(" "),e("li",[t._v("MergedBeanDefinitionPostProcessor")])]),t._v(" "),e("p",[t._v("元数据")]),t._v(" "),e("ul",[e("li",[t._v("InjectedElement")]),t._v(" "),e("li",[t._v("InjectionMetadata")])])])}),[],!1,null,null,null);v.default=a.exports}}]);